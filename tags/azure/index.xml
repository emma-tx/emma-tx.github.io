<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Azure on scarbrough-trx@GitHub</title>
    <link>/tags/azure/</link>
    <description>Recent content in Azure on scarbrough-trx@GitHub</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 07 Mar 2023 00:00:00 +0000</lastBuildDate><atom:link href="/tags/azure/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A Static Site Generator Function on Azure</title>
      <link>/post/azure-ssg/</link>
      <pubDate>Tue, 07 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/azure-ssg/</guid>
      <description>What follows is a heavily abbreviated version of a Function App component I&amp;rsquo;ve been working on.
The Function App works a lot like a controller in an MVC application, except in this case the data is provided by an API, and the Web pages are generated and stored in the Resource Group&amp;rsquo;s storage container. Azure provides the Web server that hosts these. Apparently this is the way technology is going for organisations that want to build sites that don&amp;rsquo;t need to be updated in real-time.</description>
    </item>
    
    <item>
      <title>Upgrading Azure Logic Apps</title>
      <link>/post/azure-logic-app-upgrade/azure-logic-app-upgrade/</link>
      <pubDate>Fri, 18 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>/post/azure-logic-app-upgrade/azure-logic-app-upgrade/</guid>
      <description>One of our static site generators consists of a set of Azure Logic Apps that perform various tasks, from aggregating data to constructing Web pages. The Logic Apps will each call an Azure Function to build specific elements of the Web site. For example, the myDirectoryProcessor Logic App calls the GeneratorHTML and GenerateMainIndexHTML Functions.
Upgrading the service will involve modifications to the Function App and the Logic Apps that use it.</description>
    </item>
    
    <item>
      <title>Azure Function App Migration</title>
      <link>/post/azure-function-app-migration/</link>
      <pubDate>Thu, 27 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>/post/azure-function-app-migration/</guid>
      <description>After clicking ‘Create’, select ‘Develop in portal’, and HTTP Trigger or Service Bus Trigger, depending on the type of Function App being added.
Most the required information – function name, connection, queue name, etc. – can be copied from the original function’s JSON file.
In Code + Test, copy the code from the old function or the Visual Studio Solution.
In the Integration section, the values for Trigger, Inputs and Outputs also need to be copied over.</description>
    </item>
    
    <item>
      <title>Docker Basics</title>
      <link>/post/docker-basics/</link>
      <pubDate>Fri, 02 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>/post/docker-basics/</guid>
      <description>A Docker container runs as a sandboxed process on a local system or a server, and consists of at least one image. An image is built from the source code of an application or service, and can be distributed, through a repository, to provide others the means of testing an existing software product with minimal setup.
Containers and images can be managed through the Docker Dashboard application. As such, a Docker container will require its own configurations and script that enable it to run as intended.</description>
    </item>
    
    <item>
      <title>Azure Active Directory Authentication for .NET Core Services</title>
      <link>/post/dotnet-core-azure-ad-authentication/</link>
      <pubDate>Wed, 01 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>/post/dotnet-core-azure-ad-authentication/</guid>
      <description>If upgrading an existing application, the following are required from NuGet:
Microsoft.Identity.Web Microsoft.Identity.Web.UI Generating the Project The project in this repository was generated from the ASP.NET Core Web App template. When generating the project, select &amp;lsquo;Microsoft identity platform&amp;rsquo; as the Authentication type in the Additional Information section. HTTPS and Docker were also enabled for this project.
After installing dotnet msidentity tool, Visual Studio will display the Service Dependencies and Service References.</description>
    </item>
    
  </channel>
</rss>
