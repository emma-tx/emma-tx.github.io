<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hugo on scarbrough-trx@GitHub</title>
    <link>/tags/hugo/</link>
    <description>Recent content in Hugo on scarbrough-trx@GitHub</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 01 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="/tags/hugo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hugo and the Mainroad Theme</title>
      <link>/post/hugo-and-mainroad/</link>
      <pubDate>Sat, 01 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>/post/hugo-and-mainroad/</guid>
      <description>I think I&amp;rsquo;ve found the ideal theme for my Hugo site. Mainroad is relatively simple in design, the layout is roughly what I was looking for, and it&amp;rsquo;s easier to customise. It still has tags and categories features that are essential for a site hosting technical documentation. I spent around six hours learning how the template works, re-arranging the content and tweaking the CSS to make it as clean as my MkDocs site.</description>
    </item>
    
    <item>
      <title>Netlify CMS and Continuous Deployment for Hugo</title>
      <link>/post/netlify-cms-hugo/</link>
      <pubDate>Tue, 20 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>/post/netlify-cms-hugo/</guid>
      <description>Netlify CMS and Continuous Deployment for Hugo Having experimented with this, I think Netlify&amp;rsquo;s idea of tacking a CMS onto a static site generator is tailored for situations where multiple developers, through Continuous Deployment, are providing a corporate site for which the content is being edited by non-technical users. At least it appears that way, because it takes a lot of work to develop the site and configure the CMS for anything more generic than the template provided, and an individual developer working on this as a personal project would most likely dispense with the CMS entirely and modify the files in the /content directory themselves (I&amp;rsquo;ll explain why).</description>
    </item>
    
  </channel>
</rss>
