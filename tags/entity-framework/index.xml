<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Entity Framework on scarbrough-trx@GitHub</title>
    <link>/tags/entity-framework/</link>
    <description>Recent content in Entity Framework on scarbrough-trx@GitHub</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 01 Sep 2022 00:00:00 +0000</lastBuildDate><atom:link href="/tags/entity-framework/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Entity Framework Migrations</title>
      <link>/post/entity-framework-migrations/</link>
      <pubDate>Thu, 01 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>/post/entity-framework-migrations/</guid>
      <description>The purpose of generating Entity Framework migrations is to apply database schema changes consistently across Staging, UAT and Production environments.
The proposed method would involve developers generating migration a migration script whenever changes are made to the Entity Framework model in their projects. The DevOps team would apply that migration script to update the Azure environments. The services and applications being developed themselves should not have permissions to modify the environment.</description>
    </item>
    
    <item>
      <title>Entity Framework Core Command Line Reference</title>
      <link>/post/ef-core-cli-reference/</link>
      <pubDate>Tue, 03 May 2022 00:00:00 +0000</pubDate>
      
      <guid>/post/ef-core-cli-reference/</guid>
      <description>Installing Entity command line The .NET Entity Framework command line tools can be installed globally in PowerShell, or just for a specific project.
dotnet tool install --global dotnet-ef After installation, it might be a good idea to update the tools:
dotnet tool update --global dotnet-ef Add the Entity Framework Packages to a Project In order to use the Entity Framework command line tools for a .NET Core project, it&amp;rsquo;s necessary to install the Design package.</description>
    </item>
    
    <item>
      <title>Thoughts on NET Core 6.0, Entity Framework and the New MVC Pattern</title>
      <link>/post/dotnet-core-6-ef-mvc/</link>
      <pubDate>Fri, 01 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>/post/dotnet-core-6-ef-mvc/</guid>
      <description>The following mostly doesn&amp;rsquo;t refer to problems native to the .NET Core 6 Framework itself, but rather some difficulties I encountered while getting an Entity Framework Database-First model working in the MVC project template generated by Visual Studio 2022.
Some of the problems centred around:
Breaking changes and things that might be awkward for developers accustomed to working with legacy non-Core versions of .NET (espectially .NET MVC). Not much documentation out there, relative to what&amp;rsquo;s published for the older .</description>
    </item>
    
  </channel>
</rss>
